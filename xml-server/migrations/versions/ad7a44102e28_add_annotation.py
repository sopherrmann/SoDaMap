"""add_annotation

Revision ID: ad7a44102e28
Revises: 18e53e72c385
Create Date: 2019-11-10 16:53:58.532496

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'ad7a44102e28'
down_revision = '18e53e72c385'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('annotation',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('mapped_session_id', sa.Integer(), nullable=True),
        sa.Column('annotation', sa.Text(), nullable=False),
        sa.ForeignKeyConstraint(['mapped_session_id'], ['mapped_session.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.drop_constraint('routing_destination_text_with_suggestion_id_fkey', 'routing_destination', type_='foreignkey')
    op.drop_constraint('routing_origin_text_with_suggestion_id_fkey', 'routing_origin', type_='foreignkey')
    op.drop_constraint('text_with_suggestion_fk', 'suggestions', type_='foreignkey')
    op.create_table('text_with_suggestion',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('map_search_id', sa.Integer(), nullable=True),
        sa.Column('text_typed', sa.Text(), nullable=False),
        sa.Column('suggestion_chosen', sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(['map_search_id'], ['map_search.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_table('suggestion',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('text_with_suggestion_id', sa.Integer(), nullable=True),
        sa.Column('suggestion', sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(['text_with_suggestion_id'], ['text_with_suggestion.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('text_with_suggestions')
    op.drop_table('suggestions')
    op.add_column('mapped_session', sa.Column('inserted', sa.DateTime(), nullable=True))
    op.add_column('mapped_session', sa.Column('modified', sa.DateTime(), nullable=True))
    op.create_foreign_key('routing_destination_text_with_sug_id_fkey', 'routing_destination', 'text_with_suggestion', ['text_with_suggestion_id'], ['id'])
    op.create_foreign_key('routing_origin_text_with_sug_id_fkey', 'routing_origin', 'text_with_suggestion', ['text_with_suggestion_id'], ['id'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('routing_origin_text_with_sug_id_fkey', 'routing_origin', type_='foreignkey')
    op.drop_constraint('routing_destination_text_with_sug_id_fkey', 'routing_destination', type_='foreignkey')
    op.drop_column('mapped_session', 'modified')
    op.drop_column('mapped_session', 'inserted')
    op.create_table('text_with_suggestions',
        sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column('map_search_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('text_typed', sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column('suggestion_chosen', sa.TEXT(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(['map_search_id'], ['map_search.id'], name='text_with_suggestions_map_search_id_fkey'),
        sa.PrimaryKeyConstraint('id', name='text_with_suggestions_pkey')
    )
    op.create_table('suggestions',
        sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column('suggestion', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('text_with_suggestions_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(['text_with_suggestions_id'], ['text_with_suggestions.id'], name='text_with_suggestion_fk'),
        sa.PrimaryKeyConstraint('id', name='suggestions_pkey')
    )
    op.create_foreign_key('routing_origin_text_with_suggestion_id_fkey', 'routing_origin', 'text_with_suggestions', ['text_with_suggestion_id'], ['id'])
    op.create_foreign_key('routing_destination_text_with_suggestion_id_fkey', 'routing_destination', 'text_with_suggestions', ['text_with_suggestion_id'], ['id'])
    op.drop_table('suggestion')
    op.drop_table('text_with_suggestion')
    op.drop_table('annotation')
    # ### end Alembic commands ###
